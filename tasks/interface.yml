---

# - name: Set Hostname with hostname command
#   hostname: name="{{ server_hostname|default(inventory_hostname) }}"
#   when: not (ansible_virtualization_role == "guest" and ansible_virtualization_type == "lxc")
#   ignore_errors: yes
#   become: yes

- name: replace network config
  template:
    src: "{{ system_network_interface }}"
    dest: /etc/network/interfaces
  when: ansible_os_family == "Debian"
  become: yes

- name: Systemd-networkd
  become: yes
  when: ansible_service_mgr == 'systemd' or system_service_mgr == 'systemd'
  block:
    - name: systemd-networkd bonding netdev
      template:
        src: systemd.netdev.j2
        dest: /etc/systemd/network/25-{{ item }}.netdev
        owner: systemd-network
        mode: 0640
      when: ansible_facts[item].type == 'bonding'
      with_items: "{{ ansible_interfaces }}"

    - name: systemd-networkd bonding network
      template:
        src: systemd.network.j2
        dest: /etc/systemd/network/25-{{ item }}.network
        owner: systemd-network
        mode: 0640
      when: ansible_facts[item].type == 'bonding'
      with_items: "{{ ansible_interfaces }}"

    - name: Ensure folder exist
      file:
        path: "{{ item }}"
        state: directory
        mode: "0755"
      with_items:
        - /etc/systemd/network
        - /etc/systemd/system/networking.service.d

    - name: reduce timeout raise network
      template:
        src: interfaces-timeout.conf.j2
        dest: /etc/systemd/system/networking.service.d/interfaces-timeout.conf

    - name: pin network interface name
      template:
        src: interfaces-persistent-net.j2
        dest: /etc/systemd/network/10-persistent-net-eth0.link
      when: system_network_pin and ansible_default_ipv4.type == 'ether'

    - name: enable systemd-networkd bonding network
      systemd:
        name: "{{ item.name }}"
        enabled: "{{ item.enabled }}"
      with_items:
        - { name: systemd-networkd, enabled: true }
        - { name: systemd-networkd-wait-online, enabled: false }

- name: pin network interface name (udev)
  template:
    src: interfaces-persistent-net-udev.j2
    dest: /etc/udev/rules.d/70-persistent-net.rules
  when: system_network_pin|bool
  become: yes

- name: configure dummy interface
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  when: ansible_os_family == "Debian" and system_network_dummy_ip and system_network_dummy_ip != ''
  with_items:
    - { src: dummy.conf.j2,       dest: /etc/modprobe.d/dummy.conf }
  become: yes
